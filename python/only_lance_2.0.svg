<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="250" onload="init(evt)" viewBox="0 0 1200 250" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="250" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o only_lance_2.0.svg --rate 200 --native -- python play.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="239.00"> </text><svg id="frames" x="10" width="1180" total_samples="2562"><g><title>&lt;module&gt; (play.py:155) (636 samples, 24.82%)</title><rect x="0.7806%" y="84" width="24.8244%" height="15" fill="rgb(227,0,7)" fg:x="20" fg:w="636"/><text x="1.0306%" y="94.50">&lt;module&gt; (play.py:155)</text></g><g><title>randint (numpy/random/mtrand.cpython-311-x86_64-linux-gnu.so) (636 samples, 24.82%)</title><rect x="0.7806%" y="100" width="24.8244%" height="15" fill="rgb(217,0,24)" fg:x="20" fg:w="636"/><text x="1.0306%" y="110.50">randint (numpy/random/mtrand.cpython-311..</text></g><g><title>_bounded_integers__rand_int64 (numpy/random/_bounded_integers.cpython-311-x86_64-linux-gnu.so) (636 samples, 24.82%)</title><rect x="0.7806%" y="116" width="24.8244%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="636"/><text x="1.0306%" y="126.50">_bounded_integers__rand_int64 (numpy/ran..</text></g><g><title>random_bounded_uint64_fill (numpy/random/_bounded_integers.cpython-311-x86_64-linux-gnu.so) (636 samples, 24.82%)</title><rect x="0.7806%" y="132" width="24.8244%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="636"/><text x="1.0306%" y="142.50">random_bounded_uint64_fill (numpy/random..</text></g><g><title>_mt19937_mt19937_uint32 (numpy/random/_mt19937.cpython-311-x86_64-linux-gnu.so) (336 samples, 13.11%)</title><rect x="12.4902%" y="148" width="13.1148%" height="15" fill="rgb(208,68,35)" fg:x="320" fg:w="336"/><text x="12.7402%" y="158.50">_mt19937_mt19937_uin..</text></g><g><title>mt19937_gen (numpy/random/_mt19937.cpython-311-x86_64-linux-gnu.so) (45 samples, 1.76%)</title><rect x="23.8486%" y="164" width="1.7564%" height="15" fill="rgb(232,128,0)" fg:x="611" fg:w="45"/><text x="24.0986%" y="174.50"></text></g><g><title>0x7f97a21dd593 (libc.so.6) (10 samples, 0.39%)</title><rect x="28.8056%" y="180" width="0.3903%" height="15" fill="rgb(207,160,47)" fg:x="738" fg:w="10"/><text x="29.0556%" y="190.50"></text></g><g><title>0x7f97a21db0e6 (libc.so.6) (7 samples, 0.27%)</title><rect x="29.2740%" y="196" width="0.2732%" height="15" fill="rgb(228,23,34)" fg:x="750" fg:w="7"/><text x="29.5240%" y="206.50"></text></g><g><title>0x7f97a21db143 (libc.so.6) (13 samples, 0.51%)</title><rect x="29.5863%" y="196" width="0.5074%" height="15" fill="rgb(218,30,26)" fg:x="758" fg:w="13"/><text x="29.8363%" y="206.50"></text></g><g><title>0x7f97a21db177 (libc.so.6) (3 samples, 0.12%)</title><rect x="30.2108%" y="196" width="0.1171%" height="15" fill="rgb(220,122,19)" fg:x="774" fg:w="3"/><text x="30.4608%" y="206.50"></text></g><g><title>0x7f97a21dd828 (libc.so.6) (31 samples, 1.21%)</title><rect x="29.2740%" y="180" width="1.2100%" height="15" fill="rgb(250,228,42)" fg:x="750" fg:w="31"/><text x="29.5240%" y="190.50"></text></g><g><title>0x7f97a21db200 (libc.so.6) (3 samples, 0.12%)</title><rect x="30.3669%" y="196" width="0.1171%" height="15" fill="rgb(240,193,28)" fg:x="778" fg:w="3"/><text x="30.6169%" y="206.50"></text></g><g><title>arrow::util::(anonymous namespace)::DoTotalBufferSize (pyarrow/libarrow.so.1700) (116 samples, 4.53%)</title><rect x="26.0734%" y="132" width="4.5277%" height="15" fill="rgb(216,20,37)" fg:x="668" fg:w="116"/><text x="26.3234%" y="142.50">arrow..</text></g><g><title>operator new (libstdc++.so.6.0.30) (47 samples, 1.83%)</title><rect x="28.7666%" y="148" width="1.8345%" height="15" fill="rgb(206,188,39)" fg:x="737" fg:w="47"/><text x="29.0166%" y="158.50">o..</text></g><g><title>malloc (libc.so.6) (47 samples, 1.83%)</title><rect x="28.7666%" y="164" width="1.8345%" height="15" fill="rgb(217,207,13)" fg:x="737" fg:w="47"/><text x="29.0166%" y="174.50">m..</text></g><g><title>0x7f97a21ddb74 (libc.so.6) (3 samples, 0.12%)</title><rect x="30.4840%" y="180" width="0.1171%" height="15" fill="rgb(231,73,38)" fg:x="781" fg:w="3"/><text x="30.7340%" y="190.50"></text></g><g><title>0x7f97a21dc4b5 (libc.so.6) (3 samples, 0.12%)</title><rect x="30.7182%" y="148" width="0.1171%" height="15" fill="rgb(225,20,46)" fg:x="787" fg:w="3"/><text x="30.9682%" y="158.50"></text></g><g><title>0x7f97a21db0e6 (libc.so.6) (4 samples, 0.16%)</title><rect x="30.8353%" y="164" width="0.1561%" height="15" fill="rgb(210,31,41)" fg:x="790" fg:w="4"/><text x="31.0853%" y="174.50"></text></g><g><title>&lt;module&gt; (play.py:205) (140 samples, 5.46%)</title><rect x="25.6440%" y="84" width="5.4645%" height="15" fill="rgb(221,200,47)" fg:x="657" fg:w="140"/><text x="25.8940%" y="94.50">&lt;module..</text></g><g><title>get_total_buffer_size (pyarrow/lib.cpython-311-x86_64-linux-gnu.so) (140 samples, 5.46%)</title><rect x="25.6440%" y="100" width="5.4645%" height="15" fill="rgb(226,26,5)" fg:x="657" fg:w="140"/><text x="25.8940%" y="110.50">get_tot..</text></g><g><title>arrow::util::TotalBufferSize (pyarrow/libarrow.so.1700) (140 samples, 5.46%)</title><rect x="25.6440%" y="116" width="5.4645%" height="15" fill="rgb(249,33,26)" fg:x="657" fg:w="140"/><text x="25.8940%" y="126.50">arrow::..</text></g><g><title>free (libc.so.6) (13 samples, 0.51%)</title><rect x="30.6011%" y="132" width="0.5074%" height="15" fill="rgb(235,183,28)" fg:x="784" fg:w="13"/><text x="30.8511%" y="142.50"></text></g><g><title>0x7f97a21dc850 (libc.so.6) (7 samples, 0.27%)</title><rect x="30.8353%" y="148" width="0.2732%" height="15" fill="rgb(221,5,38)" fg:x="790" fg:w="7"/><text x="31.0853%" y="158.50"></text></g><g><title>free (libc.so.6) (3 samples, 0.12%)</title><rect x="31.5379%" y="164" width="0.1171%" height="15" fill="rgb(247,18,42)" fg:x="808" fg:w="3"/><text x="31.7879%" y="174.50"></text></g><g><title>arrow::NumericArray&lt;arrow::Int64Type&gt;::~NumericArray (pyarrow/libparquet.so.1700) (26 samples, 1.01%)</title><rect x="31.1475%" y="132" width="1.0148%" height="15" fill="rgb(241,131,45)" fg:x="798" fg:w="26"/><text x="31.3975%" y="142.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;arrow::ArrayData, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (pyarrow/libarrow_python.so) (24 samples, 0.94%)</title><rect x="31.2256%" y="148" width="0.9368%" height="15" fill="rgb(249,31,29)" fg:x="800" fg:w="24"/><text x="31.4756%" y="158.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;arrow::(anonymous namespace)::ImportedBuffer, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (pyarrow/libarrow.so.1700) (13 samples, 0.51%)</title><rect x="31.6550%" y="164" width="0.5074%" height="15" fill="rgb(225,111,53)" fg:x="811" fg:w="13"/><text x="31.9050%" y="174.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;arrow::(anonymous namespace)::ImportedArrayData, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (pyarrow/libarrow.so.1700) (5 samples, 0.20%)</title><rect x="31.9672%" y="180" width="0.1952%" height="15" fill="rgb(238,160,17)" fg:x="819" fg:w="5"/><text x="32.2172%" y="190.50"></text></g><g><title>free (libc.so.6) (3 samples, 0.12%)</title><rect x="32.0453%" y="196" width="0.1171%" height="15" fill="rgb(214,148,48)" fg:x="821" fg:w="3"/><text x="32.2953%" y="206.50"></text></g><g><title>__pyx_tp_dealloc_7pyarrow_3lib_Table (pyarrow/lib.cpython-311-x86_64-linux-gnu.so) (31 samples, 1.21%)</title><rect x="31.1085%" y="84" width="1.2100%" height="15" fill="rgb(232,36,49)" fg:x="797" fg:w="31"/><text x="31.3585%" y="94.50"></text></g><g><title>arrow::SimpleTable::~SimpleTable (pyarrow/libarrow.so.1700) (31 samples, 1.21%)</title><rect x="31.1085%" y="100" width="1.2100%" height="15" fill="rgb(209,103,24)" fg:x="797" fg:w="31"/><text x="31.3585%" y="110.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;arrow::ChunkedArray, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (pyarrow/lib.cpython-311-x86_64-linux-gnu.so) (31 samples, 1.21%)</title><rect x="31.1085%" y="116" width="1.2100%" height="15" fill="rgb(229,88,8)" fg:x="797" fg:w="31"/><text x="31.3585%" y="126.50"></text></g><g><title>free (libc.so.6) (4 samples, 0.16%)</title><rect x="32.1624%" y="132" width="0.1561%" height="15" fill="rgb(213,181,19)" fg:x="824" fg:w="4"/><text x="32.4124%" y="142.50"></text></g><g><title>0x7f97a21db0e6 (libc.so.6) (19 samples, 0.74%)</title><rect x="32.3966%" y="116" width="0.7416%" height="15" fill="rgb(254,191,54)" fg:x="830" fg:w="19"/><text x="32.6466%" y="126.50"></text></g><g><title>0x7f97a21db143 (libc.so.6) (16 samples, 0.62%)</title><rect x="33.2553%" y="116" width="0.6245%" height="15" fill="rgb(241,83,37)" fg:x="852" fg:w="16"/><text x="33.5053%" y="126.50"></text></g><g><title>0x7f97a21db177 (libc.so.6) (5 samples, 0.20%)</title><rect x="33.9578%" y="116" width="0.1952%" height="15" fill="rgb(233,36,39)" fg:x="870" fg:w="5"/><text x="34.2078%" y="126.50"></text></g><g><title>0x7f97a21db193 (libc.so.6) (11 samples, 0.43%)</title><rect x="34.1530%" y="116" width="0.4294%" height="15" fill="rgb(226,3,54)" fg:x="875" fg:w="11"/><text x="34.4030%" y="126.50"></text></g><g><title>0x7f97a21dafdd (libc.so.6) (15 samples, 0.59%)</title><rect x="34.6995%" y="132" width="0.5855%" height="15" fill="rgb(245,192,40)" fg:x="889" fg:w="15"/><text x="34.9495%" y="142.50"></text></g><g><title>0x7f97a21db1bc (libc.so.6) (29 samples, 1.13%)</title><rect x="34.6604%" y="116" width="1.1319%" height="15" fill="rgb(238,167,29)" fg:x="888" fg:w="29"/><text x="34.9104%" y="126.50"></text></g><g><title>0x7f97a21dafe3 (libc.so.6) (13 samples, 0.51%)</title><rect x="35.2849%" y="132" width="0.5074%" height="15" fill="rgb(232,182,51)" fg:x="904" fg:w="13"/><text x="35.5349%" y="142.50"></text></g><g><title>0x7f97a21dafce (libc.so.6) (3 samples, 0.12%)</title><rect x="35.8704%" y="132" width="0.1171%" height="15" fill="rgb(231,60,39)" fg:x="919" fg:w="3"/><text x="36.1204%" y="142.50"></text></g><g><title>0x7f97a21dafdd (libc.so.6) (15 samples, 0.59%)</title><rect x="35.9875%" y="132" width="0.5855%" height="15" fill="rgb(208,69,12)" fg:x="922" fg:w="15"/><text x="36.2375%" y="142.50"></text></g><g><title>0x7f97a21dafe3 (libc.so.6) (13 samples, 0.51%)</title><rect x="36.5730%" y="132" width="0.5074%" height="15" fill="rgb(235,93,37)" fg:x="937" fg:w="13"/><text x="36.8230%" y="142.50"></text></g><g><title>0x7f97a21dc850 (libc.so.6) (123 samples, 4.80%)</title><rect x="32.3966%" y="100" width="4.8009%" height="15" fill="rgb(213,116,39)" fg:x="830" fg:w="123"/><text x="32.6466%" y="110.50">0x7f97..</text></g><g><title>0x7f97a21db200 (libc.so.6) (35 samples, 1.37%)</title><rect x="35.8314%" y="116" width="1.3661%" height="15" fill="rgb(222,207,29)" fg:x="918" fg:w="35"/><text x="36.0814%" y="126.50"></text></g><g><title>0x7f97a216d24a (libc.so.6) (954 samples, 37.24%)</title><rect x="0.0000%" y="68" width="37.2365%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="954"/><text x="0.2500%" y="78.50">0x7f97a216d24a (libc.so.6)</text></g><g><title>free (libc.so.6) (125 samples, 4.88%)</title><rect x="32.3575%" y="84" width="4.8790%" height="15" fill="rgb(218,138,4)" fg:x="829" fg:w="125"/><text x="32.6075%" y="94.50">free (..</text></g><g><title>&lt;module&gt; (play.py:162) (5 samples, 0.20%)</title><rect x="37.2365%" y="68" width="0.1952%" height="15" fill="rgb(250,191,14)" fg:x="954" fg:w="5"/><text x="37.4865%" y="78.50"></text></g><g><title>__init__ (lance/file.py:210) (5 samples, 0.20%)</title><rect x="37.2365%" y="84" width="0.1952%" height="15" fill="rgb(239,60,40)" fg:x="954" fg:w="5"/><text x="37.4865%" y="94.50"></text></g><g><title>0x2612790 (?) (7 samples, 0.27%)</title><rect x="37.4317%" y="100" width="0.2732%" height="15" fill="rgb(206,27,48)" fg:x="959" fg:w="7"/><text x="37.6817%" y="110.50"></text></g><g><title>lance_encoding::encodings::physical::bitpack_fastlanes::compute_compressed_bit_width_for_non_neg::hbf14a218e6d47e53 (lance/lance.abi3.so) (7 samples, 0.27%)</title><rect x="37.4317%" y="116" width="0.2732%" height="15" fill="rgb(225,35,8)" fg:x="959" fg:w="7"/><text x="37.6817%" y="126.50"></text></g><g><title>0x7f97a22a9eed (libc.so.6) (6 samples, 0.23%)</title><rect x="37.7440%" y="116" width="0.2342%" height="15" fill="rgb(250,213,24)" fg:x="967" fg:w="6"/><text x="37.9940%" y="126.50"></text></g><g><title>_$LT$lance_io..object_writer..ObjectWriter$u20$as$u20$tokio..io..async_write..AsyncWrite$GT$::poll_shutdown::hb1b5a78ea6dd6ebc (lance/lance.abi3.so) (34 samples, 1.33%)</title><rect x="37.7440%" y="100" width="1.3271%" height="15" fill="rgb(247,123,22)" fg:x="967" fg:w="34"/><text x="37.9940%" y="110.50"></text></g><g><title>0x7f97a22a9f4c (libc.so.6) (28 samples, 1.09%)</title><rect x="37.9781%" y="116" width="1.0929%" height="15" fill="rgb(231,138,38)" fg:x="973" fg:w="28"/><text x="38.2281%" y="126.50"></text></g><g><title>alloc::sync::Arc$LT$T$C$A$GT$::drop_slow::hce784b4fb1af0c9a (lance/lance.abi3.so) (7 samples, 0.27%)</title><rect x="39.1101%" y="100" width="0.2732%" height="15" fill="rgb(231,145,46)" fg:x="1002" fg:w="7"/><text x="39.3601%" y="110.50"></text></g><g><title>free (libc.so.6) (7 samples, 0.27%)</title><rect x="39.1101%" y="116" width="0.2732%" height="15" fill="rgb(251,118,11)" fg:x="1002" fg:w="7"/><text x="39.3601%" y="126.50"></text></g><g><title>munmap (libc.so.6) (7 samples, 0.27%)</title><rect x="39.1101%" y="132" width="0.2732%" height="15" fill="rgb(217,147,25)" fg:x="1002" fg:w="7"/><text x="39.3601%" y="142.50"></text></g><g><title>&lt;module&gt; (play.py:163) (269 samples, 10.50%)</title><rect x="37.4317%" y="68" width="10.4996%" height="15" fill="rgb(247,81,37)" fg:x="959" fg:w="269"/><text x="37.6817%" y="78.50">&lt;module&gt; (play...</text></g><g><title>write_batch (lance/file.py:231) (269 samples, 10.50%)</title><rect x="37.4317%" y="84" width="10.4996%" height="15" fill="rgb(209,12,38)" fg:x="959" fg:w="269"/><text x="37.6817%" y="94.50">write_batch (la..</text></g><g><title>lance_encoding::encodings::physical::bitpack_fastlanes::compute_compressed_bit_width_for_non_neg::hbf14a218e6d47e53 (lance/lance.abi3.so) (219 samples, 8.55%)</title><rect x="39.3833%" y="100" width="8.5480%" height="15" fill="rgb(227,1,9)" fg:x="1009" fg:w="219"/><text x="39.6333%" y="110.50">lance_encodi..</text></g><g><title>0x2d37e70 (?) (3 samples, 0.12%)</title><rect x="48.0484%" y="100" width="0.1171%" height="15" fill="rgb(248,47,43)" fg:x="1231" fg:w="3"/><text x="48.2984%" y="110.50"></text></g><g><title>arrow_data::equal::dictionary::dictionary_equal::h0388305c02c8fbf8 (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="48.0484%" y="116" width="0.1171%" height="15" fill="rgb(221,10,30)" fg:x="1231" fg:w="3"/><text x="48.2984%" y="126.50"></text></g><g><title>_$LT$arrow_array..array..struct_array..StructArray$u20$as$u20$core..fmt..Debug$GT$::fmt::h8623e637eda11795 (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="48.2826%" y="116" width="0.1171%" height="15" fill="rgb(210,229,1)" fg:x="1237" fg:w="3"/><text x="48.5326%" y="126.50"></text></g><g><title>_$LT$arrow_array..ffi_stream..ArrowArrayStreamReader$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h0d9ddfb1096f0501 (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="48.3997%" y="116" width="0.1171%" height="15" fill="rgb(222,148,37)" fg:x="1240" fg:w="3"/><text x="48.6497%" y="126.50"></text></g><g><title>0x7f97a246c93c (ld-linux-x86-64.so.2) (3 samples, 0.12%)</title><rect x="48.7510%" y="148" width="0.1171%" height="15" fill="rgb(234,67,33)" fg:x="1249" fg:w="3"/><text x="49.0010%" y="158.50"></text></g><g><title>_$LT$lance..file..LanceReaderAdapter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h143bbec3805ffb7d (lance/lance.abi3.so) (11 samples, 0.43%)</title><rect x="48.5168%" y="116" width="0.4294%" height="15" fill="rgb(247,98,35)" fg:x="1243" fg:w="11"/><text x="48.7668%" y="126.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (8 samples, 0.31%)</title><rect x="48.6339%" y="132" width="0.3123%" height="15" fill="rgb(247,138,52)" fg:x="1246" fg:w="8"/><text x="48.8839%" y="142.50"></text></g><g><title>arrow_array::array::union_array::UnionArray::try_new::hf651433ca9eb4d14 (lance/lance.abi3.so) (12 samples, 0.47%)</title><rect x="48.9461%" y="116" width="0.4684%" height="15" fill="rgb(213,79,30)" fg:x="1254" fg:w="12"/><text x="49.1961%" y="126.50"></text></g><g><title>core::error::Error::type_id::h242849b7208564c1 (lance/lance.abi3.so) (5 samples, 0.20%)</title><rect x="49.4926%" y="116" width="0.1952%" height="15" fill="rgb(246,177,23)" fg:x="1268" fg:w="5"/><text x="49.7426%" y="126.50"></text></g><g><title>core::ptr::drop_in_place$LT$alloc..sync..ArcInner$LT$arrow_schema..schema..Schema$GT$$GT$::h8ed31c76ce6ed391 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="49.8048%" y="116" width="0.1561%" height="15" fill="rgb(230,62,27)" fg:x="1276" fg:w="4"/><text x="50.0548%" y="126.50"></text></g><g><title>0x7ffe289cb358 (?) (48 samples, 1.87%)</title><rect x="48.2436%" y="100" width="1.8735%" height="15" fill="rgb(216,154,8)" fg:x="1236" fg:w="48"/><text x="48.4936%" y="110.50">0..</text></g><g><title>_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$::write_char::hb6145e78ae0748f6 (lance/lance.abi3.so) (7 samples, 0.27%)</title><rect x="50.2342%" y="100" width="0.2732%" height="15" fill="rgb(244,35,45)" fg:x="1287" fg:w="7"/><text x="50.4842%" y="110.50"></text></g><g><title>0x7f97a21dc8cd (libc.so.6) (7 samples, 0.27%)</title><rect x="50.7806%" y="132" width="0.2732%" height="15" fill="rgb(251,115,12)" fg:x="1301" fg:w="7"/><text x="51.0306%" y="142.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (7 samples, 0.27%)</title><rect x="50.7806%" y="148" width="0.2732%" height="15" fill="rgb(240,54,50)" fg:x="1301" fg:w="7"/><text x="51.0306%" y="158.50"></text></g><g><title>_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::hc39adac5ed6c436d (lance/lance.abi3.so) (21 samples, 0.82%)</title><rect x="50.5074%" y="100" width="0.8197%" height="15" fill="rgb(233,84,52)" fg:x="1294" fg:w="21"/><text x="50.7574%" y="110.50"></text></g><g><title>free (libc.so.6) (19 samples, 0.74%)</title><rect x="50.5855%" y="116" width="0.7416%" height="15" fill="rgb(207,117,47)" fg:x="1296" fg:w="19"/><text x="50.8355%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (7 samples, 0.27%)</title><rect x="51.0539%" y="132" width="0.2732%" height="15" fill="rgb(249,43,39)" fg:x="1308" fg:w="7"/><text x="51.3039%" y="142.50"></text></g><g><title>_$LT$arrow_array..array..byte_array..GenericByteArray$LT$T$GT$$u20$as$u20$core..convert..From$LT$arrow_data..data..ArrayData$GT$$GT$::from::ha4cf944d6e2c502e (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="51.4832%" y="100" width="0.1171%" height="15" fill="rgb(209,38,44)" fg:x="1319" fg:w="3"/><text x="51.7332%" y="110.50"></text></g><g><title>_$LT$arrow_array..array..primitive_array..PrimitiveArray$LT$T$GT$$u20$as$u20$arrow_array..array..Array$GT$::slice::h2ffaf01e0735e1d4 (lance/lance.abi3.so) (10 samples, 0.39%)</title><rect x="51.6003%" y="100" width="0.3903%" height="15" fill="rgb(236,212,23)" fg:x="1322" fg:w="10"/><text x="51.8503%" y="110.50"></text></g><g><title>_$LT$arrow_array..array..struct_array..StructArray$u20$as$u20$core..fmt..Debug$GT$::fmt::h8623e637eda11795 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="52.0297%" y="100" width="0.1561%" height="15" fill="rgb(242,79,21)" fg:x="1333" fg:w="4"/><text x="52.2797%" y="110.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (3 samples, 0.12%)</title><rect x="52.5761%" y="132" width="0.1171%" height="15" fill="rgb(211,96,35)" fg:x="1347" fg:w="3"/><text x="52.8261%" y="142.50"></text></g><g><title>_$LT$arrow_data..data..ArrayData$u20$as$u20$core..cmp..PartialEq$GT$::eq::h9506545bb779b5aa (lance/lance.abi3.so) (21 samples, 0.82%)</title><rect x="52.1858%" y="100" width="0.8197%" height="15" fill="rgb(253,215,40)" fg:x="1337" fg:w="21"/><text x="52.4358%" y="110.50"></text></g><g><title>malloc (libc.so.6) (20 samples, 0.78%)</title><rect x="52.2248%" y="116" width="0.7806%" height="15" fill="rgb(211,81,21)" fg:x="1338" fg:w="20"/><text x="52.4748%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (8 samples, 0.31%)</title><rect x="52.6932%" y="132" width="0.3123%" height="15" fill="rgb(208,190,38)" fg:x="1350" fg:w="8"/><text x="52.9432%" y="142.50"></text></g><g><title>_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha60fcd8dd63a20ff (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="53.0055%" y="100" width="0.1171%" height="15" fill="rgb(235,213,38)" fg:x="1358" fg:w="3"/><text x="53.2555%" y="110.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (6 samples, 0.23%)</title><rect x="53.9422%" y="148" width="0.2342%" height="15" fill="rgb(237,122,38)" fg:x="1382" fg:w="6"/><text x="54.1922%" y="158.50"></text></g><g><title>0x7f97a21debe1 (libc.so.6) (5 samples, 0.20%)</title><rect x="54.1764%" y="164" width="0.1952%" height="15" fill="rgb(244,218,35)" fg:x="1388" fg:w="5"/><text x="54.4264%" y="174.50"></text></g><g><title>0x7f97a21de00e (libc.so.6) (5 samples, 0.20%)</title><rect x="54.5277%" y="196" width="0.1952%" height="15" fill="rgb(240,68,47)" fg:x="1397" fg:w="5"/><text x="54.7777%" y="206.50"></text></g><g><title>0x7f97a21dcbe8 (libc.so.6) (5 samples, 0.20%)</title><rect x="54.5277%" y="212" width="0.1952%" height="15" fill="rgb(210,16,53)" fg:x="1397" fg:w="5"/><text x="54.7777%" y="222.50"></text></g><g><title>0x7f97a21de53f (libc.so.6) (70 samples, 2.73%)</title><rect x="54.3716%" y="180" width="2.7322%" height="15" fill="rgb(235,124,12)" fg:x="1393" fg:w="70"/><text x="54.6216%" y="190.50">0x..</text></g><g><title>0x7f97a21de059 (libc.so.6) (61 samples, 2.38%)</title><rect x="54.7229%" y="196" width="2.3810%" height="15" fill="rgb(224,169,11)" fg:x="1402" fg:w="61"/><text x="54.9729%" y="206.50">0x..</text></g><g><title>0x7f97a21debf5 (libc.so.6) (77 samples, 3.01%)</title><rect x="54.3716%" y="164" width="3.0055%" height="15" fill="rgb(250,166,2)" fg:x="1393" fg:w="77"/><text x="54.6216%" y="174.50">0x7..</text></g><g><title>0x7f97a21de65b (libc.so.6) (4 samples, 0.16%)</title><rect x="57.2209%" y="180" width="0.1561%" height="15" fill="rgb(242,216,29)" fg:x="1466" fg:w="4"/><text x="57.4709%" y="190.50"></text></g><g><title>0x7f97a21dc850 (libc.so.6) (3 samples, 0.12%)</title><rect x="57.2600%" y="196" width="0.1171%" height="15" fill="rgb(230,116,27)" fg:x="1467" fg:w="3"/><text x="57.5100%" y="206.50"></text></g><g><title>0x7f97a21dedd8 (libc.so.6) (3 samples, 0.12%)</title><rect x="57.4551%" y="164" width="0.1171%" height="15" fill="rgb(228,99,48)" fg:x="1472" fg:w="3"/><text x="57.7051%" y="174.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (3 samples, 0.12%)</title><rect x="57.4551%" y="180" width="0.1171%" height="15" fill="rgb(253,11,6)" fg:x="1472" fg:w="3"/><text x="57.7051%" y="190.50"></text></g><g><title>_$LT$futures_util..stream..unfold..Unfold$LT$T$C$F$C$Fut$GT$$u20$as$u20$futures_core..stream..Stream$GT$::poll_next::he03dfe2f65f182e5 (lance/lance.abi3.so) (135 samples, 5.27%)</title><rect x="53.4348%" y="132" width="5.2693%" height="15" fill="rgb(247,143,39)" fg:x="1369" fg:w="135"/><text x="53.6848%" y="142.50">_$LT$f..</text></g><g><title>posix_memalign (libc.so.6) (116 samples, 4.53%)</title><rect x="54.1764%" y="148" width="4.5277%" height="15" fill="rgb(236,97,10)" fg:x="1388" fg:w="116"/><text x="54.4264%" y="158.50">posix..</text></g><g><title>0x7f97a21dedea (libc.so.6) (29 samples, 1.13%)</title><rect x="57.5722%" y="164" width="1.1319%" height="15" fill="rgb(233,208,19)" fg:x="1475" fg:w="29"/><text x="57.8222%" y="174.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (29 samples, 1.13%)</title><rect x="57.5722%" y="180" width="1.1319%" height="15" fill="rgb(216,164,2)" fg:x="1475" fg:w="29"/><text x="57.8222%" y="190.50"></text></g><g><title>_$LT$futures_util..stream..unfold..Unfold$LT$T$C$F$C$Fut$GT$$u20$as$u20$futures_core..stream..Stream$GT$::poll_next::heaf64a33aad9c099 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="58.7041%" y="132" width="0.1561%" height="15" fill="rgb(220,129,5)" fg:x="1504" fg:w="4"/><text x="58.9541%" y="142.50"></text></g><g><title>lance_encoding::encodings::logical::struct::SimpleStructDecoder::do_wait_for_loaded::_$u7b$$u7b$closure$u7d$$u7d$::h89eb7fea6cd3e7aa (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="58.9383%" y="132" width="0.1171%" height="15" fill="rgb(242,17,10)" fg:x="1510" fg:w="3"/><text x="59.1883%" y="142.50"></text></g><g><title>_$LT$arrow_array..array..list_array..GenericListArray$LT$OffsetSize$GT$$u20$as$u20$arrow_array..array..Array$GT$::get_array_memory_size::h848fe7169bece3f9 (lance/lance.abi3.so) (149 samples, 5.82%)</title><rect x="53.3568%" y="116" width="5.8158%" height="15" fill="rgb(242,107,0)" fg:x="1367" fg:w="149"/><text x="53.6068%" y="126.50">_$LT$ar..</text></g><g><title>tokio::runtime::task::harness::cancel_task::h00f272889e84af8d (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="59.0554%" y="132" width="0.1171%" height="15" fill="rgb(251,28,31)" fg:x="1513" fg:w="3"/><text x="59.3054%" y="142.50"></text></g><g><title>_$LT$futures_util..stream..stream..buffered..Buffered$LT$St$GT$$u20$as$u20$futures_core..stream..Stream$GT$::poll_next::h24edfd4e4622b1c6 (lance/lance.abi3.so) (156 samples, 6.09%)</title><rect x="53.1616%" y="100" width="6.0890%" height="15" fill="rgb(233,223,10)" fg:x="1362" fg:w="156"/><text x="53.4116%" y="110.50">_$LT$fut..</text></g><g><title>0x7f97a246c93c (ld-linux-x86-64.so.2) (5 samples, 0.20%)</title><rect x="59.9141%" y="132" width="0.1952%" height="15" fill="rgb(215,21,27)" fg:x="1535" fg:w="5"/><text x="60.1641%" y="142.50"></text></g><g><title>_$LT$lance..file..LanceReaderAdapter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h143bbec3805ffb7d (lance/lance.abi3.so) (24 samples, 0.94%)</title><rect x="59.2506%" y="100" width="0.9368%" height="15" fill="rgb(232,23,21)" fg:x="1518" fg:w="24"/><text x="59.5006%" y="110.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (12 samples, 0.47%)</title><rect x="59.7190%" y="116" width="0.4684%" height="15" fill="rgb(244,5,23)" fg:x="1530" fg:w="12"/><text x="59.9690%" y="126.50"></text></g><g><title>0x7f97a21de059 (libc.so.6) (8 samples, 0.31%)</title><rect x="60.9680%" y="132" width="0.3123%" height="15" fill="rgb(226,81,46)" fg:x="1562" fg:w="8"/><text x="61.2180%" y="142.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (4 samples, 0.16%)</title><rect x="61.2802%" y="132" width="0.1561%" height="15" fill="rgb(247,70,30)" fg:x="1570" fg:w="4"/><text x="61.5302%" y="142.50"></text></g><g><title>_$LT$lance_encoding..encodings..logical..primitive..StructuralCompositeDecodeArrayTask$u20$as$u20$lance_encoding..decoder..StructuralDecodeArrayTask$GT$::decode::h2bd9744a5e0d4923 (lance/lance.abi3.so) (44 samples, 1.72%)</title><rect x="60.1874%" y="100" width="1.7174%" height="15" fill="rgb(212,68,19)" fg:x="1542" fg:w="44"/><text x="60.4374%" y="110.50"></text></g><g><title>malloc (libc.so.6) (31 samples, 1.21%)</title><rect x="60.6948%" y="116" width="1.2100%" height="15" fill="rgb(240,187,13)" fg:x="1555" fg:w="31"/><text x="60.9448%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (12 samples, 0.47%)</title><rect x="61.4364%" y="132" width="0.4684%" height="15" fill="rgb(223,113,26)" fg:x="1574" fg:w="12"/><text x="61.6864%" y="142.50"></text></g><g><title>0x7f97a21dd3ea (libc.so.6) (3 samples, 0.12%)</title><rect x="62.6464%" y="132" width="0.1171%" height="15" fill="rgb(206,192,2)" fg:x="1605" fg:w="3"/><text x="62.8964%" y="142.50"></text></g><g><title>0x7f97a21de059 (libc.so.6) (16 samples, 0.62%)</title><rect x="63.0367%" y="132" width="0.6245%" height="15" fill="rgb(241,108,4)" fg:x="1615" fg:w="16"/><text x="63.2867%" y="142.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (9 samples, 0.35%)</title><rect x="63.6612%" y="132" width="0.3513%" height="15" fill="rgb(247,173,49)" fg:x="1631" fg:w="9"/><text x="63.9112%" y="142.50"></text></g><g><title>_$LT$lance_encoding..encodings..logical..struct..SimpleStructDecodeTask$u20$as$u20$lance_encoding..decoder..DecodeArrayTask$GT$::decode::h6dc94e07b227e33f (lance/lance.abi3.so) (71 samples, 2.77%)</title><rect x="61.9048%" y="100" width="2.7713%" height="15" fill="rgb(224,114,35)" fg:x="1586" fg:w="71"/><text x="62.1548%" y="110.50">_$..</text></g><g><title>malloc (libc.so.6) (65 samples, 2.54%)</title><rect x="62.1390%" y="116" width="2.5371%" height="15" fill="rgb(245,159,27)" fg:x="1592" fg:w="65"/><text x="62.3890%" y="126.50">ma..</text></g><g><title>__lll_lock_wake_private (libc.so.6) (17 samples, 0.66%)</title><rect x="64.0125%" y="132" width="0.6635%" height="15" fill="rgb(245,172,44)" fg:x="1640" fg:w="17"/><text x="64.2625%" y="142.50"></text></g><g><title>0x7f97a22a9dc6 (libc.so.6) (5 samples, 0.20%)</title><rect x="64.7931%" y="116" width="0.1952%" height="15" fill="rgb(236,23,11)" fg:x="1660" fg:w="5"/><text x="65.0431%" y="126.50"></text></g><g><title>0x7f97a22a9dcd (libc.so.6) (4 samples, 0.16%)</title><rect x="64.9883%" y="116" width="0.1561%" height="15" fill="rgb(205,117,38)" fg:x="1665" fg:w="4"/><text x="65.2383%" y="126.50"></text></g><g><title>0x7f97a22a9de5 (libc.so.6) (3 samples, 0.12%)</title><rect x="65.2225%" y="116" width="0.1171%" height="15" fill="rgb(237,72,25)" fg:x="1671" fg:w="3"/><text x="65.4725%" y="126.50"></text></g><g><title>0x7f97a22a9dec (libc.so.6) (4 samples, 0.16%)</title><rect x="65.3396%" y="116" width="0.1561%" height="15" fill="rgb(244,70,9)" fg:x="1674" fg:w="4"/><text x="65.5896%" y="126.50"></text></g><g><title>0x7f97a22a9df3 (libc.so.6) (188 samples, 7.34%)</title><rect x="65.4957%" y="116" width="7.3380%" height="15" fill="rgb(217,125,39)" fg:x="1678" fg:w="188"/><text x="65.7457%" y="126.50">0x7f97a22a..</text></g><g><title>0x7f97a22a9e03 (libc.so.6) (148 samples, 5.78%)</title><rect x="72.9118%" y="116" width="5.7767%" height="15" fill="rgb(235,36,10)" fg:x="1868" fg:w="148"/><text x="73.1618%" y="126.50">0x7f97a..</text></g><g><title>0x7f97a22a9e7f (libc.so.6) (11 samples, 0.43%)</title><rect x="78.7276%" y="116" width="0.4294%" height="15" fill="rgb(251,123,47)" fg:x="2017" fg:w="11"/><text x="78.9776%" y="126.50"></text></g><g><title>0x7f97a22a9ebe (libc.so.6) (14 samples, 0.55%)</title><rect x="79.1569%" y="116" width="0.5464%" height="15" fill="rgb(221,13,13)" fg:x="2028" fg:w="14"/><text x="79.4069%" y="126.50"></text></g><g><title>_$LT$lance_encoding..encodings..physical..bitpack_fastlanes..BitpackedForNonNegScheduler$u20$as$u20$lance_encoding..decoder..PageScheduler$GT$::schedule_ranges::_$u7b$$u7b$closure$u7d$$u7d$::hfdef588b2aa6e0d0 (lance/lance.abi3.so) (387 samples, 15.11%)</title><rect x="64.6760%" y="100" width="15.1054%" height="15" fill="rgb(238,131,9)" fg:x="1657" fg:w="387"/><text x="64.9260%" y="110.50">_$LT$lance_encoding..en..</text></g><g><title>0x7f97a21de059 (libc.so.6) (3 samples, 0.12%)</title><rect x="80.1717%" y="132" width="0.1171%" height="15" fill="rgb(211,50,8)" fg:x="2054" fg:w="3"/><text x="80.4217%" y="142.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::grow_one::h6f6cf0553e2e1785 (lance/lance.abi3.so) (16 samples, 0.62%)</title><rect x="79.8205%" y="100" width="0.6245%" height="15" fill="rgb(245,182,24)" fg:x="2045" fg:w="16"/><text x="80.0705%" y="110.50"></text></g><g><title>malloc (libc.so.6) (16 samples, 0.62%)</title><rect x="79.8205%" y="116" width="0.6245%" height="15" fill="rgb(242,14,37)" fg:x="2045" fg:w="16"/><text x="80.0705%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (4 samples, 0.16%)</title><rect x="80.2888%" y="132" width="0.1561%" height="15" fill="rgb(246,228,12)" fg:x="2057" fg:w="4"/><text x="80.5388%" y="142.50"></text></g><g><title>arrow_array::array::union_array::UnionArray::try_new::hf651433ca9eb4d14 (lance/lance.abi3.so) (11 samples, 0.43%)</title><rect x="80.5621%" y="100" width="0.4294%" height="15" fill="rgb(213,55,15)" fg:x="2064" fg:w="11"/><text x="80.8121%" y="110.50"></text></g><g><title>free (libc.so.6) (3 samples, 0.12%)</title><rect x="80.8743%" y="116" width="0.1171%" height="15" fill="rgb(209,9,3)" fg:x="2072" fg:w="3"/><text x="81.1243%" y="126.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (16 samples, 0.62%)</title><rect x="82.0453%" y="132" width="0.6245%" height="15" fill="rgb(230,59,30)" fg:x="2102" fg:w="16"/><text x="82.2953%" y="142.50"></text></g><g><title>malloc (libc.so.6) (41 samples, 1.60%)</title><rect x="81.3817%" y="116" width="1.6003%" height="15" fill="rgb(209,121,21)" fg:x="2085" fg:w="41"/><text x="81.6317%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (8 samples, 0.31%)</title><rect x="82.6698%" y="132" width="0.3123%" height="15" fill="rgb(220,109,13)" fg:x="2118" fg:w="8"/><text x="82.9198%" y="142.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (7 samples, 0.27%)</title><rect x="83.2943%" y="132" width="0.2732%" height="15" fill="rgb(232,18,1)" fg:x="2134" fg:w="7"/><text x="83.5443%" y="142.50"></text></g><g><title>arrow_data::byte_view::validate_binary_view::hbc326f01f2e43b8a (lance/lance.abi3.so) (70 samples, 2.73%)</title><rect x="80.9914%" y="100" width="2.7322%" height="15" fill="rgb(215,41,42)" fg:x="2075" fg:w="70"/><text x="81.2414%" y="110.50">ar..</text></g><g><title>realloc (libc.so.6) (19 samples, 0.74%)</title><rect x="82.9820%" y="116" width="0.7416%" height="15" fill="rgb(224,123,36)" fg:x="2126" fg:w="19"/><text x="83.2320%" y="126.50"></text></g><g><title>__lll_lock_wake_private (libc.so.6) (4 samples, 0.16%)</title><rect x="83.5675%" y="132" width="0.1561%" height="15" fill="rgb(240,125,3)" fg:x="2141" fg:w="4"/><text x="83.8175%" y="142.50"></text></g><g><title>0x7f97a21dd7d0 (libc.so.6) (4 samples, 0.16%)</title><rect x="85.1678%" y="132" width="0.1561%" height="15" fill="rgb(205,98,50)" fg:x="2182" fg:w="4"/><text x="85.4178%" y="142.50"></text></g><g><title>__lll_lock_wait_private (libc.so.6) (5 samples, 0.20%)</title><rect x="85.5972%" y="132" width="0.1952%" height="15" fill="rgb(205,185,37)" fg:x="2193" fg:w="5"/><text x="85.8472%" y="142.50"></text></g><g><title>arrow_data::byte_view::validate_string_view::h66d022be0e3442a1 (lance/lance.abi3.so) (68 samples, 2.65%)</title><rect x="83.7237%" y="100" width="2.6542%" height="15" fill="rgb(238,207,15)" fg:x="2145" fg:w="68"/><text x="83.9737%" y="110.50">ar..</text></g><g><title>malloc (libc.so.6) (59 samples, 2.30%)</title><rect x="84.0749%" y="116" width="2.3029%" height="15" fill="rgb(213,199,42)" fg:x="2154" fg:w="59"/><text x="84.3249%" y="126.50">m..</text></g><g><title>__lll_lock_wake_private (libc.so.6) (15 samples, 0.59%)</title><rect x="85.7923%" y="132" width="0.5855%" height="15" fill="rgb(235,201,11)" fg:x="2198" fg:w="15"/><text x="86.0423%" y="142.50"></text></g><g><title>arrow_data::equal::dictionary::dictionary_equal::h0388305c02c8fbf8 (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="86.4169%" y="100" width="0.1171%" height="15" fill="rgb(207,46,11)" fg:x="2214" fg:w="3"/><text x="86.6669%" y="110.50"></text></g><g><title>arrow_data::ffi::FFI_ArrowArray::new::hf4684cfc5f418418 (lance/lance.abi3.so) (7 samples, 0.27%)</title><rect x="86.5730%" y="100" width="0.2732%" height="15" fill="rgb(241,35,35)" fg:x="2218" fg:w="7"/><text x="86.8230%" y="110.50"></text></g><g><title>malloc (libc.so.6) (5 samples, 0.20%)</title><rect x="86.6511%" y="116" width="0.1952%" height="15" fill="rgb(243,32,47)" fg:x="2220" fg:w="5"/><text x="86.9011%" y="126.50"></text></g><g><title>core::ptr::drop_in_place$LT$$u5b$$LP$alloc..sync..Arc$LT$arrow_schema..field..Field$GT$$C$alloc..sync..Arc$LT$dyn$u20$arrow_array..array..Array$GT$$RP$$u5d$$GT$::h5dc6b3b160070a0d (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="86.8852%" y="100" width="0.1561%" height="15" fill="rgb(247,202,23)" fg:x="2226" fg:w="4"/><text x="87.1352%" y="110.50"></text></g><g><title>core::ptr::drop_in_place$LT$arrow_array..builder..generic_bytes_builder..GenericByteBuilder$LT$arrow_array..types..GenericBinaryType$LT$i32$GT$$GT$$GT$::hfb6902d6b29b2d5d (lance/lance.abi3.so) (8 samples, 0.31%)</title><rect x="87.1585%" y="100" width="0.3123%" height="15" fill="rgb(219,102,11)" fg:x="2233" fg:w="8"/><text x="87.4085%" y="110.50"></text></g><g><title>free (libc.so.6) (4 samples, 0.16%)</title><rect x="87.3146%" y="116" width="0.1561%" height="15" fill="rgb(243,110,44)" fg:x="2237" fg:w="4"/><text x="87.5646%" y="126.50"></text></g><g><title>core::ptr::drop_in_place$LT$lance..dataset..schema_evolution..NewColumnTransform$GT$::hd3cda9f10a35af9e (lance/lance.abi3.so) (6 samples, 0.23%)</title><rect x="87.4707%" y="100" width="0.2342%" height="15" fill="rgb(222,74,54)" fg:x="2241" fg:w="6"/><text x="87.7207%" y="110.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (6 samples, 0.23%)</title><rect x="87.4707%" y="116" width="0.2342%" height="15" fill="rgb(216,99,12)" fg:x="2241" fg:w="6"/><text x="87.7207%" y="126.50"></text></g><g><title>0x7f97a246c93c (ld-linux-x86-64.so.2) (4 samples, 0.16%)</title><rect x="87.5488%" y="132" width="0.1561%" height="15" fill="rgb(226,22,26)" fg:x="2243" fg:w="4"/><text x="87.7988%" y="142.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_inner::habfa94b728c93274 (lance/lance.abi3.so) (8 samples, 0.31%)</title><rect x="87.8220%" y="100" width="0.3123%" height="15" fill="rgb(217,163,10)" fg:x="2250" fg:w="8"/><text x="88.0720%" y="110.50"></text></g><g><title>write (libc.so.6) (8 samples, 0.31%)</title><rect x="87.8220%" y="116" width="0.3123%" height="15" fill="rgb(213,25,53)" fg:x="2250" fg:w="8"/><text x="88.0720%" y="126.50"></text></g><g><title>lance_core::datatypes::field::Field::mut_field_by_id::h3b96ac52b469d51f (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="88.2123%" y="100" width="0.1171%" height="15" fill="rgb(252,105,26)" fg:x="2260" fg:w="3"/><text x="88.4623%" y="110.50"></text></g><g><title>lance_encoding::compression_algo::fastlanes::unpack_64_4::h0a9c25feedb3d7bd (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="88.3294%" y="100" width="0.1561%" height="15" fill="rgb(220,39,43)" fg:x="2263" fg:w="4"/><text x="88.5794%" y="110.50"></text></g><g><title>lance_encoding::compression_algo::fastlanes::unpack_64_5::h2f957aad26d7ee40 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="88.4856%" y="100" width="0.1561%" height="15" fill="rgb(229,68,48)" fg:x="2267" fg:w="4"/><text x="88.7356%" y="110.50"></text></g><g><title>lance_encoding::decoder::StructuralBatchDecodeStream::next_batch_task::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h76c27ffde36174bd (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="88.6417%" y="100" width="0.1561%" height="15" fill="rgb(252,8,32)" fg:x="2271" fg:w="4"/><text x="88.8917%" y="110.50"></text></g><g><title>lance_encoding::encodings::logical::struct::SimpleStructDecoder::do_wait_for_loaded::_$u7b$$u7b$closure$u7d$$u7d$::h89eb7fea6cd3e7aa (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="88.7978%" y="100" width="0.1561%" height="15" fill="rgb(223,20,43)" fg:x="2275" fg:w="4"/><text x="89.0478%" y="110.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn::h4ad66d00adb789d5 (lance/lance.abi3.so) (160 samples, 6.25%)</title><rect x="89.0320%" y="100" width="6.2451%" height="15" fill="rgb(229,81,49)" fg:x="2281" fg:w="160"/><text x="89.2820%" y="110.50">tokio::r..</text></g><g><title>syscall (libc.so.6) (159 samples, 6.21%)</title><rect x="89.0710%" y="116" width="6.2061%" height="15" fill="rgb(236,28,36)" fg:x="2282" fg:w="159"/><text x="89.3210%" y="126.50">syscall ..</text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source::haf8a13dd2b6a3fff (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="95.2771%" y="100" width="0.1561%" height="15" fill="rgb(249,185,26)" fg:x="2441" fg:w="4"/><text x="95.5271%" y="110.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle::he17c2d9fb33b3a78 (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="95.4333%" y="100" width="0.1171%" height="15" fill="rgb(249,174,33)" fg:x="2445" fg:w="3"/><text x="95.6833%" y="110.50"></text></g><g><title>0x7f97a246c93c (ld-linux-x86-64.so.2) (11 samples, 0.43%)</title><rect x="95.9797%" y="132" width="0.4294%" height="15" fill="rgb(233,201,37)" fg:x="2459" fg:w="11"/><text x="96.2297%" y="142.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::shutdown2::h1c42872e2f0dd354 (lance/lance.abi3.so) (24 samples, 0.94%)</title><rect x="95.5504%" y="100" width="0.9368%" height="15" fill="rgb(221,78,26)" fg:x="2448" fg:w="24"/><text x="95.8004%" y="110.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (19 samples, 0.74%)</title><rect x="95.7455%" y="116" width="0.7416%" height="15" fill="rgb(250,127,30)" fg:x="2453" fg:w="19"/><text x="95.9955%" y="126.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::h24bcd24d72e4bd2e (lance/lance.abi3.so) (11 samples, 0.43%)</title><rect x="96.4871%" y="100" width="0.4294%" height="15" fill="rgb(230,49,44)" fg:x="2472" fg:w="11"/><text x="96.7371%" y="110.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task::h00f272889e84af8d (lance/lance.abi3.so) (11 samples, 0.43%)</title><rect x="96.9165%" y="100" width="0.4294%" height="15" fill="rgb(229,67,23)" fg:x="2483" fg:w="11"/><text x="97.1665%" y="110.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task::h72d4c3a7c645387c (lance/lance.abi3.so) (3 samples, 0.12%)</title><rect x="97.3458%" y="100" width="0.1171%" height="15" fill="rgb(249,83,47)" fg:x="2494" fg:w="3"/><text x="97.5958%" y="110.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks$LT$S$GT$::bind_inner::h5190f7502725c097 (lance/lance.abi3.so) (5 samples, 0.20%)</title><rect x="97.4629%" y="100" width="0.1952%" height="15" fill="rgb(215,43,3)" fg:x="2497" fg:w="5"/><text x="97.7129%" y="110.50"></text></g><g><title>__tls_get_addr (ld-linux-x86-64.so.2) (5 samples, 0.20%)</title><rect x="97.4629%" y="116" width="0.1952%" height="15" fill="rgb(238,154,13)" fg:x="2497" fg:w="5"/><text x="97.7129%" y="126.50"></text></g><g><title>0x7f97a246c93c (ld-linux-x86-64.so.2) (4 samples, 0.16%)</title><rect x="97.5020%" y="132" width="0.1561%" height="15" fill="rgb(219,56,2)" fg:x="2498" fg:w="4"/><text x="97.7520%" y="142.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow::h5be31e5896f8fa64 (lance/lance.abi3.so) (5 samples, 0.20%)</title><rect x="97.6581%" y="100" width="0.1952%" height="15" fill="rgb(233,0,4)" fg:x="2502" fg:w="5"/><text x="97.9081%" y="110.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output::h7642756b1e7660a6 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="97.8532%" y="100" width="0.1561%" height="15" fill="rgb(235,30,7)" fg:x="2507" fg:w="4"/><text x="98.1032%" y="110.50"></text></g><g><title>&lt;module&gt; (play.py:173) (1,287 samples, 50.23%)</title><rect x="47.9313%" y="68" width="50.2342%" height="15" fill="rgb(250,79,13)" fg:x="1228" fg:w="1287"/><text x="48.1813%" y="78.50">&lt;module&gt; (play.py:173)</text></g><g><title>to_table (lance/file.py:46) (1,286 samples, 50.20%)</title><rect x="47.9703%" y="84" width="50.1952%" height="15" fill="rgb(211,146,34)" fg:x="1229" fg:w="1286"/><text x="48.2203%" y="94.50">to_table (lance/file.py:46)</text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_many_owned::_$u7b$$u7b$closure$u7d$$u7d$::h8c2b4ac09b1832f3 (lance/lance.abi3.so) (4 samples, 0.16%)</title><rect x="98.0094%" y="100" width="0.1561%" height="15" fill="rgb(228,22,38)" fg:x="2511" fg:w="4"/><text x="98.2594%" y="110.50"></text></g><g><title>_$LT$arrow_schema..error..ArrowError$u20$as$u20$core..fmt..Debug$GT$::fmt::hb37923331e720ed6 (lance/lance.abi3.so) (10 samples, 0.39%)</title><rect x="98.1655%" y="68" width="0.3903%" height="15" fill="rgb(235,168,5)" fg:x="2515" fg:w="10"/><text x="98.4155%" y="78.50"></text></g><g><title>free (libc.so.6) (10 samples, 0.39%)</title><rect x="98.1655%" y="84" width="0.3903%" height="15" fill="rgb(221,155,16)" fg:x="2515" fg:w="10"/><text x="98.4155%" y="94.50"></text></g><g><title>munmap (libc.so.6) (10 samples, 0.39%)</title><rect x="98.1655%" y="100" width="0.3903%" height="15" fill="rgb(215,215,53)" fg:x="2515" fg:w="10"/><text x="98.4155%" y="110.50"></text></g><g><title>arrow_data::ffi::FFI_ArrowArray::new::hf4684cfc5f418418 (lance/lance.abi3.so) (31 samples, 1.21%)</title><rect x="98.5558%" y="68" width="1.2100%" height="15" fill="rgb(223,4,10)" fg:x="2525" fg:w="31"/><text x="98.8058%" y="78.50"></text></g><g><title>free (libc.so.6) (17 samples, 0.66%)</title><rect x="99.1023%" y="84" width="0.6635%" height="15" fill="rgb(234,103,6)" fg:x="2539" fg:w="17"/><text x="99.3523%" y="94.50"></text></g><g><title>0x7f97a21dc4b5 (libc.so.6) (8 samples, 0.31%)</title><rect x="99.4536%" y="100" width="0.3123%" height="15" fill="rgb(227,97,0)" fg:x="2548" fg:w="8"/><text x="99.7036%" y="110.50"></text></g><g><title>all (2,562 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="2562"/><text x="0.2500%" y="62.50"></text></g><g><title>core::ptr::drop_in_place$LT$arrow_data..data..ArrayDataBuilder$GT$::h0f5de80aafd414b7 (lance/lance.abi3.so) (6 samples, 0.23%)</title><rect x="99.7658%" y="68" width="0.2342%" height="15" fill="rgb(228,201,54)" fg:x="2556" fg:w="6"/><text x="100.0158%" y="78.50"></text></g></svg></svg>